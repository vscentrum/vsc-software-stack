easyblock = 'CMakeMake'

name = 'SIRIUS'
version = '7.5.2'

homepage = 'https://github.com/electronic-structure/SIRIUS'
description = """SIRIUS is a domain specific library for electronic structure calculations. 
It implements pseudopotential plane wave (PP-PW) and 
full potential linearized augmented plane wave (FP-LAPW) methods."""

toolchain = {'name': 'foss', 'version': '2023a'}

source_urls = ['https://github.com/electronic-structure/SIRIUS/archive/']
sources = ['v%(version)s.tar.gz']

builddependencies = [
    ('CMake', '3.26.3'),
    # ('Eigen', '3.4.0'), maybe for tests
]
dependencies = [
    ('GSL', '2.7'),
    ('libxc', '6.2.2'),
    ('HDF5', '1.14.0'),
    ('spglib','2.5.0'),
    # SpFFT - create
    # SPLA - create
]

# separate_build_dir = True

# configopts = "-DPy_ENABLE_SHARED=1 -DRDK_INSTALL_STATIC_LIBS=OFF -DRDK_INSTALL_INTREE=OFF "
# configopts += "-DRDK_BUILD_INCHI_SUPPORT=ON "
# configopts += "-DBOOST_ROOT=$EBROOTBOOST"

# # ingnore failing test pythonSourceTests - from . import rdBase failing
# prebuildopts = "sed -i '22d' %(builddir)s/rdkit-Release_2024_03_3/rdkit/CMakeLists.txt &&"

# # merge source directory into build directory in order to run the tests
# buildopts = '&& cp -RT %(builddir)s/%(namelower)s-*/ ./ && '
# buildopts += 'export RDBASE=$PWD && export PYTHONPATH=$PWD:$PYTHONPATH && '

# # Specify path for libraries so that they are found during the tests when the module is built with --rpath flag.
# buildopts += 'export LD_LIBRARY_PATH=%(builddir)s/easybuild_obj/lib:${LD_LIBRARY_PATH} && '

# # 'ctest' allows to pass additional arguments opposed to 'make test'
# buildopts += 'ctest --output-on-failure'

# local_libs = ['Alignment', 'Catalogs', 'ChemicalFeatures', 'ChemReactions', 'ChemTransforms', 'coordgen', 'DataStructs',
#               'Depictor', 'Descriptors', 'DistGeometry', 'DistGeomHelpers', 'EigenSolvers', 'FileParsers',
#               'FilterCatalog', 'Fingerprints', 'FMCS', 'ForceFieldHelpers', 'ForceField', 'FragCatalog', 'GraphMol',
#               'hc', 'InfoTheory', 'maeparser', 'MMPA', 'MolAlign', 'MolCatalog', 'MolChemicalFeatures', 'MolDraw2D',
#               'MolHash', 'MolInterchange', 'MolStandardize', 'MolTransforms', 'Optimizer', 'PartialCharges', 'RDBoost',
#               'RDGeneral', 'RDGeometryLib', 'RDStreams', 'ReducedGraphs', 'RGroupDecomposition', 'RingDecomposerLib',
#               'ScaffoldNetwork', 'ShapeHelpers', 'SimDivPickers', 'SLNParse', 'SmilesParse', 'Subgraphs',
#               'SubstructLibrary', 'SubstructMatch', 'Trajectory']

# sanity_check_paths = {
#     'files': ['lib/libRDKit%s.%s' % (x, SHLIB_EXT) for x in local_libs],
#     'dirs': ['include/rdkit', 'lib/python%(pyshortver)s/site-packages/rdkit'],
# }

# sanity_check_commands = [
#     "python -c 'import rdkit.rdBase'",
# ]

# modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

# moduleclass = 'chem'
