easyblock = 'PythonBundle'

name = 'OpenForceField-Toolkit'
version = '0.16.0'

homepage = 'https://github.com/openforcefield/openff-toolkit'
description = """The Open Force Field Toolkit provides implementations of the SMIRNOFF format, 
parameterization engine, and other tools."""

toolchain = {'name': 'foss', 'version': '2023a'}

# DEPS:
    # - python >=3.9 OK
    # - packaging OK pypi bundle
    # - numpy =1 OK
    # - smirnoff99frosst -> CREATED OK
    # - openff-forcefields -> CREATED OK
    # - openff-amber-ff-ports >=0.0.4 -> CREATED OK
    # - openff-units >=0.2.0 -> CREATED OK
    # - openff-utilities -> CREATED OK
    # - networkx >=2.5 OK
    # - xmltodict ok exts
    # - bson ok exts
    # - importlib-metadata >=4.10 ok pypi bundle
    # - python-constraint ok exts
    # - cachetools ok exts
    # - cached-property ok exts
    # - typing_extensions OK
    # run_constrained:
        # - openforcefield ==9999999999 ???
        # - pydantic <3.0.0a0 OK
        # - qcportal >=0.50.0 ok exts
        # Remove when OpenEye has builds that use zstandard >=0.19
            # - zstandard ==0.18 ok exts
    # qcportal 0.0.0 requires apsw, ok exts
    # qcportal 0.0.0 requires pyjwt, ok exts
    # qcportal 0.0.0 requires pyyaml, OK
    # qcportal 0.0.0 requires qcelemental, ok exts
    # qcportal 0.0.0 requires tqdm, OK
    # ERROR1 -> qcportal from whl OK
        # The following Python packages were likely not installed correctly because they show a version of '0.0.0': qcportal
        # This may be solved by using a *-none-any.whl file as the source instead. See e.g. the SOURCE*_WHL templates.
        # Otherwise you could check if the package provides a version at all or if e.g. poetry is required (check the source for a pyproject.toml
    # - openmm >=7.6 OK
    # - openff-interchange >=0.3.18 -> CREATED OK -> not dep it needs toolkit
    # - rdkit -> CREATED OK
    # - ambertools >=22 -> created OK
    # - mdtraj OK
    # - notebook OK
    # - ipywidgets OK in jupyterNotebook (jupyter-server)
    # openff.nagl_models -> CREATED OK
    
builddependencies = [('poetry', '1.5.1')]
dependencies = [
    ('Python', '3.11.3'),
    ('Python-bundle-PyPI', '2023.06'),
    ('SciPy-bundle', '2023.07'),
    ('networkx', '3.1'),
    ('typing-extensions', '4.9.0'),
    ('pydantic', '2.5.3'),
    # ('SMIRNOFF99Frosst', '1.1.0'),
    # ('OpenForceField-ForceFields', '2024.04.0'),
    # ('OpenForceField-Amber-FF-Ports', '0.0.4'),
    # ('OpenForceField-Units', '0.2.2'),
    # ('OpenForceField-Utilities', '0.1.12'),
    # ('OpenForceField-NAGL-Models', '0.2.0'),
    # ('OpenForceField-Models', '0.1.2'),
    # ('OpenForceField-Interchange', '0.3.27'),
    ('tqdm', '4.66.1'),
    ('OpenMM', '8.0.0'),
    ('PyYAML', '6.0'),
    ('RDKit', '2024.03.3'),
    ('MDTraj', '1.9.9'),
    ('JupyterNotebook', '7.0.2'),
    ('AmberTools', '23.6'),
    ('Pint', '0.23'),
    ('nglview', '3.1.2'),
]

use_pip = True

exts_list = [
    ('qcelemental', '0.26.0', {
        'checksums': ['a14e8510cdbfda645ef1461c1afd02efb599311733dbba5f83fcd1d6168a6ddd'],
    }),
    ('PyJWT', '2.8.0', {
        'modulename': 'jwt',
        'checksums': ['57e28d156e3d5c10088e0c68abb90bfac3df82b40a71bd0daa20c65ccd5c23de'],
    }),
    ('apsw', '3.46.0.0', {
        'checksums': ['e128ccaab511f9a7fc48be6414f99a9197f83a69624d8ba40c1ca241bdef418e'],
    }),
    ('zstandard', '0.18.0', {
        'checksums': ['0ac0357a0d985b4ff31a854744040d7b5754385d1f98f7145c30e02c6865cb6f'],
    }),
    ('qcportal', '0.55', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['f6eb86d6ace4ae6a71bbd8e2ee054305aff2c1da0198a3741b0d589c572a31b3'],
    }),
    ('cached-property', '1.5.2', {
        'checksums': ['9fa5755838eecbb2d234c3aa390bd80fbd3ac6b6869109bfc1b499f7bd89a130'],
    }),
    ('cachetools', '5.3.3', {
        'checksums': ['ba29e2dfa0b8b556606f097407ed1aa62080ee108ab0dc5ec9d6a723a007d105'],
    }),
    ('python-constraint', '1.4.0', {
        'modulename': 'constraint',
        'source_tmpl': '%(name)s-%(version)s.tar.bz2',
        'checksums': ['501d6f17afe0032dfc6ea6c0f8acc12e44f992733f00e8538961031ef27ccb8e'],
    }),
    ('bson', '0.5.10', {
        'checksums': ['d6511b2ab051139a9123c184de1a04227262173ad593429d21e443d6462d6590'],
    }),
    ('xmltodict', '0.13.0', {
        'checksums': ['341595a488e3e01a85a9d8911d8912fd922ede5fecc4dce437eb4b6c8d037e56'],
    }),
    ('intermol', '0.1.2', {
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/shirtsgroup/InterMol/archive/'],
        'checksums': ['a3065133ba16585a5db3807466a36242d191156525c33079cf46a97cedcfe835'],
    }),
    ('SMIRNOFF99Frosst', '1.1.0', {
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/smirnoff99Frosst/archive/'],
        'checksums': ['940c4ed3cd720e746549a3335f10b7b0d9047a67bc216ad45dd875be5c8ec467'],
    }),
    ('SMIRNOFF-Plugins', '2024.01.0', {
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/smirnoff-plugins/archive/'],
        'checksums': ['8ba4dbc6ed320f06f30bf42e8f70399bc3818becd668990693b51ddca183ff74'],
    }),
    ('OpenForceField-ForceFields', '2024.04.0', {
        'modulename': 'openforcefields',
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-forcefields/archive/'],
        'checksums': ['fc7094cdb74bf9f0ed665dfc716cc62c5a37def3fc7e852adeae0ae4b60169c7'],
    }),
    ('OpenForceField-Amber-FF-Ports', '0.0.4', {
        'modulename': 'openff.amber_ff_ports',
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-amber-ff-ports/archive/'],
        'checksums': ['dbf2d1ccce06b0627b1eccae7e227ad800ff1cbac3e869344de265b178cc0207'],
    }),
    ('OpenForceField-Utilities', '0.1.12', {
        'modulename': 'openff.utilities',
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-utilities/archive/'],
        'checksums': ['92882c5b87b40bdb4ee1e8c84c0ecc0fc83f26eaf3e3befde41bfdcf93d75dea'],
    }),
    ('OpenForceField-Units', '0.2.2', {
        'modulename': 'openff.units',
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-units/archive/'],
        'checksums': ['532746534c1937938580d5cfe98f414aff9bfbcc66970e115a88a38f6d5a2581'],
    }),
    ('OpenForceField-NAGL-Models', '0.2.0', {
        'modulename': 'openff.nagl_models',
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-nagl-models/archive/'],
        'checksums': ['df8e7ee980aa7ea99559759258a16e3aaa362245f5b7c32f9c25fb226eaee222'],
    }),
    ('OpenForceField-Models', '0.1.2', {
        'modulename': 'openff.models',
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-models/archive/'],
        'checksums': ['cf2aa7ef467721f141149e4ce96134db390b27012f09996c4442a3fad2371653'],
    }),
    ('OpenForceField-Interchange', '0.3.27', {
        'modulename': 'openff.interchange',
        'source_tmpl': 'v%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-interchange/archive/'],
        'checksums': ['6b44ba8a89921b3843a5f9fc41dc4f8a0c784ba12221e3ea0fb8c1b01a10cf2e'],
    }),
    (name, version, {
        'modulename': 'openff.toolkit',
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/openforcefield/openff-toolkit/archive/'],
        'checksums': ['1c1aa2ac9fff7c1613168531884da4ade53cbe21069022c999996d7effd2474c'],
    }),
]

sanity_check_commands = [
    "python -c 'from openff.toolkit import Molecule, Topology, ForceField'",
    "python -c 'from openff.interchange import Interchange'",
    "python -c 'from openff.units import unit'",
    "python -c 'from openff.interchange.components.mdconfig import MDConfig'",
    "python -c 'from openff.interchange.models import TopologyKey'",
    "python -c 'from openff.toolkit.typing.engines.smirnoff import ForceField'",
]

sanity_pip_check = True

moduleclass = 'bio'

# ERROR1:
    # during pytest - toolkit
    #1OK ModuleNotFoundError: No module named 'nglview' -> added nglview to deps
    # during pytest - intechanges
    #1NO from nonbonded_plugins.nonbonded import ... ModuleNotFoundError: No module named 'nonbonded_plugins' -> try to fix but there is nothing in plugins dir
    #2 ModuleNotFoundError: No module named 'intermol'? -> added intermol to exts