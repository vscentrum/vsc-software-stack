easyblock = 'PythonBundle'

name = 'synthcity'
version = '0.2.10'

local_pytorch_version = '2.1.2'

homepage = 'https://github.com/vanderschaarlab/synthcity'
description = """A library for generating and evaluating synthetic tabular data."""

toolchain = {'name': 'foss', 'version': '2023a'}

# DEPS:
    # importlib-metadata - ok in pypi bundle
    # pandas>=1.4,<2 - in scipy is pandas v2.0.3 -> unpin
    # torch>=1.10.0,<2.0 - torch is v2.1.2 -> unpin
    # scikit-learn>=1.2 OK
    # nflows>=0.14 ok exts
    # numpy>=1.20, <1.24 - v1.25.1 in scipy -> unpin
    # lifelines>=0.27,!= 0.27.5, <0.27.8 -> NO -> create
    # opacus>=1.3 ok exts
    # decaf-synthetic-data>=0.1.6 ok exts
    # optuna>=3.1 OK
    # shap OK
    # tqdm OK
    # loguru ok exts
    # pydantic<2.0 - v2.5.3 -> unpin
    # cloudpickle - ok in SHAP
    # scipy ok
    # xgboost<2.0.0 - v2.0.2 -> unpin
    # geomloss ok exts
    # pgmpy ok exts
        # networkx OK
        # pyparsing ok in pypi bundle
        # statsmodels OK
        # joblib ok in pypi bundle
    # redis OK
    # pycox ok exts
    # xgbse ok exts
    # pykeops ok exts
    # fflows ok exts 
    # monai OK
    # tsai; python_version>"3.7" ok exts
    # be-great>=0.0.5;python_version>="3.9" ok exts
    # arfpy ok exts

dependencies = [
    ('Python', '3.11.3'),
    ('Python-bundle-PyPI', '2023.06'),
    # ('lifelines', '0.27.4'),
    ('SciPy-bundle', '2023.07'),
    ('pydantic', '2.5.3'),
    ('Redis', '7.2.3'),
    ('scikit-learn', '1.3.1'),
    ('SHAP', '0.43.0'),
    ('PyTorch', local_pytorch_version),
    ('XGBoost', '2.0.2'),
    ('tqdm', '4.66.1'),
    # ('Mako', '1.2.0'),
    # ('PyYAML', '6.0'),
    # ('fastai', '2.7.10'),
    # ('h5py', '3.7.0'),
    ('networkx', '3.1'),
    # ('protobuf', '3.19.4'),
    # ('Arrow', '8.0.0'),
    # ('pybind11', '2.9.2'),
    # ('PyTorch-Lightning', '2.2.1'),
    # ('spaCy', '3.4.4'),
    # ('tensorboard', '2.10.0'),
    # ('torchvision', '0.13.1'),
    # ('Brotli-python', '1.0.9'),
    ('statsmodels', '0.14.1'),
    # ('imbalanced-learn', '0.10.1'),
    # ('Greenlet', '2.0.2'),
    ('Optuna', '3.5.0'),
    # ('Cython', '0.29.33'),
    # ('cython-blis', '0.9.1'),
    # ('torchtext', '0.14.1', '-PyTorch-%s' % local_pytorch_version),
    # ('IPython', '8.5.0'),
    ('MONAI', '1.3.0'),
]

sanity_pip_check = True
use_pip = True

exts_list = [
    ('decaf_synthetic_data', '0.1.6', {
        'modulename': 'decaf',
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['dc51502f9f72b3fbdbef697238d72ae6b8457f76efc9763a747970ba543d4e0f'],
    }),
    # ('feather-format', '0.4.1', {
    #     'modulename': 'feather',
    #     'checksums': ['45f67e3745d394d4f160ca6d636bbfd4f8b68d01199dc1649b6e487d3e878903'],
    # }),
    ('fflows', '0.0.3', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['18de7a7b98e3708ff2d5ae9f10fad625740230c4de6447906b7ca477667b78fb'],
    }),
    # ('fsspec', '2022.7.1', {
    #     'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    #     'checksums': ['36c5a8e7c4fc20cf32ef6934ac0a122accc8a593ddc8478d30c3ca4dbbd95500'],
    # }),
    # ('functorch', '0.2.0', {
    #     'source_urls': ['https://github.com/pytorch/%(name)s/archive/'],
    #     'sources': ['v%(version)s.tar.gz'],
    #     'checksums': ['ea6446b60d5e0847140e1a0dcb91d8a7de2b5844bba7c3f7560eb5020a05881f'],
    # }),
    ('geomloss', '0.2.6'),
    # ('inflate64', '0.3.1', {
    #     'checksums': ['b52dd8fefd2ba179e5dfa18d6eca7e2fc822584616271c039d5ef1f9ca90c71c'],
    # }),
    # ('keopscore', '2.1.1', {
    #     'checksums': ['07b4d254a28a9d4a43153663856677263dd7112912efacbad83c2a76ea0836f0'],
    # }),
    ('loguru', '0.7.2', {
        'checksums': ['e671a53522515f34fd406340ee968cb9ecafbc4b36c679da03c18fd8d0bd51ac'],
    }),
    # ('multivolumefile', '0.2.3', {
    #     'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    #     'checksums': ['237f4353b60af1703087cf7725755a1f6fcaeeea48421e1896940cd1c920d678'],
    # }),
    ('nflows', '0.14', {
        'checksums': ['6299844a62f9999fcdf2d95cb2d01c091a50136bd17826e303aba646b2d11b55'],
    }),
    ('opacus', '1.4.1', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    }),
    # ('opt_einsum', '3.3.0', {
    #     'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    #     'checksums': ['2455e59e3947d3c275477df7f5205b30635e266fe6dc300e3d9f9646bfcea147'],
    # }),
    ('pgmpy', '0.1.25', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    }),
    # ('py7zr', '0.20.4', {
    #     'checksums': ['1d01f98ea1e1f5c49940358691b2076f9a5848056426541e783de33834f59e21'],
    # }),
    # ('pybcj', '1.0.1', {
    #     'modulename': 'bcj',
    #     'checksums': ['8b682ed08caabfb7c042d4be083e28ddc692afb1deff5567111f8855071b75c3'],
    # }),
    ('pycox', '0.2.3', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['9ea3c64a4a650ccf6c96cf512712de330f2d75de32122d86995c7cd37ff105d1'],
    }),
    # ('pycryptodomex', '3.17', {
    #     'modulename': 'Crypto',
    #     'checksums': ['0af93aad8d62e810247beedef0261c148790c52f3cd33643791cc6396dd217c1'],
    # }),
    ('pykeops', '2.2.3'),
    # ('pyppmd', '1.0.0', {
    #     'checksums': ['075c9bd297e3b0a87dd7aeabca7fee668218acbe69ecc1c6511064558de8840f'],
    # }),
    # ('pyts', '0.12.0', {
    #     'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    #     'checksums': ['acd66b0cf1fd17d9ce6449335f5da30701f65fdee185d4b918726b62ca6af79d'],
    # }),
    # ('pyzstd', '0.15.4', {
    #     'checksums': ['de07ac54f57642f186732075cdce2be3d4a30228c3b17a6d8c6053765dc6eec8'],
    # }),
    # ('texttable', '1.6.7', {
    #     'source_tmpl': '%(name)s-%(version)s-py2.py3-none-any.whl',
    #     'checksums': ['b7b68139aa8a6339d2c320ca8b1dc42d13a7831a346b446cb9eb385f0c76310c'],
    # }),
    # ('thinc', '8.1.9', {
    #     'checksums': ['8a1e65529c6d0796271d2a7e5ca6ea013fcb7dad69ec609d5093a25808107f51'],
    #     # we are using blis 0.9.1
    #     # thinc has problems with blis>0.8.0 on Windows only (https://github.com/explosion/thinc/pull/772)
    #     'preinstallopts': 'sed -i "s/blis>=0.7.8,<0.8.0/blis>=0.7.8/g" setup.cfg && ',
    # }),
    # ('torchtuples', '0.2.2', {
    #     'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    #     'checksums': ['186625230a149cc09f64116d51b203ffefe78160f5a0445adad195893663f55b'],
    # }),
    ('tsai', '0.3.9', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    }),
    ('be_great', '0.0.7', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    }),
    ('xgbse', '0.2.3', {
        'source_urls': ['https://github.com/loft-br/xgboost-survival-embeddings/archive/'],
        'sources': ['v%(version)s.tar.gz'],
        'checksums': ['9e6b71539b2b533c00eddfe7681cdd541f393d9573594eca358d263b141c127d'],
    }),
    ('arfpy', '0.1.1'),
    (name, version, {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
    }),
]

sanity_check_commands = [
    "python -c 'from synthcity.plugins import Plugins'",
]

moduleclass = 'lib'
