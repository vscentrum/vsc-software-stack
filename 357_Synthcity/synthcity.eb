easyblock = 'PythonBundle'

name = 'synthcity'
version = '0.2.10'

local_pytorch_version = '2.1.2'

homepage = 'https://github.com/vanderschaarlab/synthcity'
description = """A library for generating and evaluating synthetic tabular data."""

toolchain = {'name': 'foss', 'version': '2023a'}

# DEPS:
    # importlib-metadata - ok in pypi bundle
    # pandas>=1.4,<2 - in scipy is pandas v2.0.3 -> unpin
    # torch>=1.10.0,<2.0 - torch is v2.1.2 -> unpin
    # scikit-learn>=1.2 OK
    # nflows>=0.14 ok exts
    # numpy>=1.20, <1.24 - v1.25.1 in scipy -> unpin
    # lifelines>=0.27,!= 0.27.5, <0.27.8 -> NO -> created OK
    # opacus>=1.3 ok exts
    # decaf-synthetic-data>=0.1.6 ok exts
    # optuna>=3.1 OK
    # shap OK
    # tqdm OK
    # loguru ok exts
    # pydantic<2.0 - v2.5.3 -> unpin
    # cloudpickle - ok in SHAP
    # scipy ok
    # xgboost<2.0.0 - v2.0.2 -> unpin
    # geomloss ok exts
    # pgmpy ok exts
        # networkx OK
        # pyparsing ok in pypi bundle
        # statsmodels OK
        # joblib ok in pypi bundle
    # redis OK
    # pycox ok exts
    # xgbse ok exts
    # pykeops ok exts
    # fflows ok exts 
    # monai OK
    # tsai; python_version>"3.7" ok exts
    # be-great>=0.0.5;python_version>="3.9" ok exts
    # arfpy ok exts
    #
    # opacus 1.4.1 requires opt-einsum, ok
    # be-great 0.0.7 requires accelerate, ok
    # be-great 0.0.7 requires datasets, OK (HF-Datasets)
    # be-great 0.0.7 requires transformers, OK (Transformers)
    # pgmpy 0.1.25 requires opt-einsum, ok
    # pykeops 2.2.3 requires keopscore, ok
    # tsai 0.3.9 requires fastai, -> UPDATE
    # tsai 0.3.9 requires imbalanced-learn, OK
    # tsai 0.3.9 requires pyts, ok
    # decaf-synthetic-data 0.1.6 requires pytorch-lightning OK
    # decaf-synthetic-data 0.1.6 requires torchtext -> add PyTorch-bundle instead of PyTorch -> has torchtext OK
    # pycox 0.2.3 requires feather-format, ok
    # pycox 0.2.3 requires h5py, OK
    # pycox 0.2.3 requires py7zr, ok
    # pycox 0.2.3 requires torchtuples, ok
    # -> unpin in local_preinstallopts
        # synthcity 0.2.10 has requirement lifelines!=0.27.5,<0.27.8,>=0.27, but you have lifelines 0.28
        # synthcity 0.2.10 has requirement numpy<1.24,>=1.20, but you have numpy 1.25.1.
        # synthcity 0.2.10 has requirement pandas<2,>=1.4, but you have pandas 2.0.3.
        # synthcity 0.2.10 has requirement pydantic<2.0, but you have pydantic 2.5.3.
        # synthcity 0.2.10 has requirement torch<2.0,>=1.10.0, but you have torch 2.1.2.
        # synthcity 0.2.10 has requirement xgboost<2.0.0, but you have xgboost 2.0.2.
    # -> networkx v2.8.8 in exts
        # decaf-synthetic-data 0.1.6 has requirement networkx<3.0,>=2.0, but you have networkx 3.1.
    # -> use xgbse v0.2.3
        # xgbse 0.3.1 has requirement joblib<2.0.0,>=1.4.2, but you have joblib 1.2.0.
        # xgbse 0.3.1 has requirement lifelines<0.30.0,>=0.29.0, but you have lifelines 0.28.0.
        # xgbse 0.3.1 has requirement numpy<2.0.0,>=1.26.4, but you have numpy 1.25.1.
        # xgbse 0.3.1 has requirement scikit-learn<2.0.0,>=1.5.0, but you have scikit-learn 1.3.1.
        # xgbse 0.3.1 has requirement xgboost<3.0.0,>=2.1.0, but you have xgboost 2.0.2.
    # py7zr 0.21.1 requires brotli, OK
    # py7zr 0.21.1 requires inflate64, ok
    # py7zr 0.21.1 requires multivolumefile, ok
    # py7zr 0.21.1 requires pybcj, ok
    # py7zr 0.21.1 requires pycryptodomex, ok
    # py7zr 0.21.1 requires pyppmd, ok
    # py7zr 0.21.1 requires pyzpyzstdstd, ok
    # py7zr 0.21.1 requires texttable, ok
    # decaf-synthetic-data 0.1.6 has requirement pytorch-lightning<2.0, but you have pytorch-lightning 2.2.1.
        # -> create econfig for Decaf
        # problem: decaf has only whl on pypi + no releases on GitHub
    # fastapi 0.110.0 has requirement typing-extensions>=4.8.0, but you have typing-extensions 4.6.3.
        # seems it goes from PyTorch-Lightning -> put it as the last dep
    # py7zr 0.21.1 has requirement brotli>=1.1.0; platform_python_implementation == "CPython", but you have brotli 1.0.9.
        # use v0.20.6
    # fastapi 0.110.0 has requirement typing-extensions>=4.8.0, but you have typing-extensions 4.6.3.
        # -> add v typing-extensions v4.9.0 to exts
    # py7zr 0.20.6 has requirement pyppmd<1.1.0,>=0.18.1, but you have pyppmd 1.1.0. -> add pyppmd v1.0.0 ok
    # TESTS
    # black 24.4.2 requires mypy-extensions ok exts
    # pre-commit 3.7.1 requires identify, ok exts
    # pre-commit 3.7.1 requires nodeenv, ok exts
    # bandit 1.7.9 requires stevedore, ok exts
    # pytest-benchmark 4.0.0 requires py-cpuinfo, OK
    # doc8 1.1.1 requires restructuredtext-lint, ok exts
    # doc8 1.1.1 requires stevedore, ok exts
    # flake8 7.1.0 requires mccabe, ok exts
    # flake8 7.1.0 requires pycodestyle, OK
    # flake8 7.1.0 requires pyflakes, ok exts
    # pre-commit 3.7.1 requires cfgv, ok exts
    # flake8 7.1.0 has requirement pycodestyle<2.13.0,>=2.12.0, but you have pycodestyle 2.11.1. -> flake8 v7.0.0
    
builddependencies = [('poetry', '1.5.1')]
dependencies = [
    ('Python', '3.11.3'),
    ('Python-bundle-PyPI', '2023.06'),
    ('lifelines', '0.28.0'),
    ('SciPy-bundle', '2023.07'),
    ('pydantic', '2.5.3'),
    ('Redis', '7.2.3'),
    ('scikit-learn', '1.3.1'),
    ('SHAP', '0.43.0'),
    ('PyTorch-bundle', local_pytorch_version),
    ('XGBoost', '2.0.2'),
    ('tqdm', '4.66.1'),
    ('HF-Datasets', '2.18.0'),
    ('Transformers', '4.39.3'),
    # ('Mako', '1.2.0'),
    # ('PyYAML', '6.0'),
    ('fastai', '2.7.15'),
    ('h5py', '3.9.0'),
    ('networkx', '3.1'),
    # ('protobuf', '3.19.4'),
    # ('Arrow', '8.0.0'),
    # ('pybind11', '2.9.2'),
    # ('spaCy', '3.4.4'),
    # ('tensorboard', '2.10.0'),
    # ('torchvision', '0.13.1'),
    ('Brotli-python', '1.0.9'),
    ('statsmodels', '0.14.1'),
    ('imbalanced-learn', '0.12.3'),
    # ('Greenlet', '2.0.2'),
    ('Optuna', '3.5.0'),
    # ('Cython', '0.29.33'),
    # ('cython-blis', '0.9.1'),
    # ('IPython', '8.5.0'),
    ('MONAI', '1.3.0'),
    ('DECAF-synthetic-data', '0.1.6'),
    ('PyTorch-Lightning', '2.2.1'),
    # TESTS
    # ('pytest', '7.4.2'), in pypi bundle
    ('Jupyter-bundle', '20230823'),
    # ('pytest-xdist', '3.3.1'), in pypi bundle
    ('python-igraph', '0.11.4'),
    ('coverage', '7.2.3'),
    ('py-cpuinfo', '9.0.0'),
    ('pycodestyle', '2.11.1'),
    ('hypothesis', '6.82.0'),
]

sanity_pip_check = True
use_pip = True

# unpin deps restrictions
local_preinstallopts = (
    "sed -i"
    " -e 's/pandas>=1.4,<2/pandas>=1.4/'"
    " -e 's/torch>=1.10.0,<2.0/torch>=1.10.0/'"
    " -e 's/numpy>=1.20, <1.24/numpy>=1.20/'"
    " -e 's/pydantic<2.0/pydantic/'"
    " -e 's/xgboost<2.0.0/xgboost/'"
    " -e 's/lifelines>=0.27,!= 0.27.5, <0.27.8/lifelines>=0.27,!= 0.27.5/'"
    " %(builddir)s/%(name)s/%(name)s-%(version)s/setup.cfg && "
)

# fix invalid syntax of xgbse/setup.py
local_xgbse_preinstallopts = (
    "sed -i "
    " -e '45,49d'"
    " -e 's/pandas>=1.0.\*/pandas>=1.0.0/'"
    " setup.py && "
)

exts_list = [
    ('zope.interface', '6.3', {
        # 'modulename': 'zope-interface',
        'checksums': ['f83d6b4b22262d9a826c3bd4b2fbfafe1d0000f085ef8e44cd1328eea274ae6a'],
    }),
    ('hyperlink', '21.0.0', {
        'checksums': ['427af957daa58bc909471c6c40f74c5450fa123dd093fc53efd2e91d2705a56b'],
    }),
    ('constantly', '23.10.4', {
        'checksums': ['aa92b70a33e2ac0bb33cd745eb61776594dc48764b06c35e0efd050b7f1c7cbd'],
    }),
    ('Automat', '22.10.0', {
        'checksums': ['e56beb84edad19dcc11d30e8d9b895f75deeb5ef5e96b84a467066b3b84bb04e'],
    }),
    ('incremental', '22.10.0', {
        'checksums': ['912feeb5e0f7e0188e6f42241d2f450002e11bbc0937c65865045854c24c0bd0'],
    }),
    ('twisted', '24.3.0', {
        'checksums': ['6b38b6ece7296b5e122c9eb17da2eeab3d98a198f50ca9efd00fb03e5b4fd4ae'],
    }),
    ('fixtures', '4.1.0', {
        'checksums': ['82b1c5e69f615526ef6c067188a1e6c6067df7f88332509c99f8b8fdbb9776f3'],
    }),
    ('testscenarios', '0.5.0', {
        'checksums': ['c257cb6b90ea7e6f8fef3158121d430543412c9a87df30b5dde6ec8b9b57a2b6'],
    }),
    ('evaluate', '0.4.2', {
        'checksums': ['851ab767df8ec4031366c512eb88d8174adfba65d2c8c4c9bfdfe9c702212234'],
    }),
    ('testtools', '2.7.2', {
        'checksums': ['5be5bbc1f0fa0f8b60aca6ceec07845d41d0c475cf445bfadb4d2c45ec397ea3'],
    }),
    ('cfgv', '3.4.0', {
        'checksums': ['e52591d4c5f5dead8e0f673fb16db7949d2cfb3f7da4582893288f0ded8fe560'],
    }),
    ('pyflakes', '3.2.0', {
        'checksums': ['1c61603ff154621fb2a9172037d84dca3500def8c8b630657d1701f026f8af3f'],
    }),
    ('mccabe', '0.7.0', {
        'checksums': ['348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325'],
    }),
    ('restructuredtext_lint', '1.4.0', {
        'checksums': ['1b235c0c922341ab6c530390892eb9e92f90b9b75046063e047cacfb0f050c45'],
    }),
    ('stevedore', '5.2.0', {
        'checksums': ['46b93ca40e1114cea93d738a6c1e365396981bb6bb78c27045b7587c9473544d'],
    }),
    ('nodeenv', '1.9.1', {
        'checksums': ['6ec12890a2dab7946721edbfbcd91f3319c6ccc9aec47be7c7e6b7011ee6645f'],
    }),
    ('identify', '2.6.0', {
        'checksums': ['cb171c685bdc31bcc4c1734698736a7d5b6c8bf2e0c15117f4d469c8640ae5cf'],
    }),
    ('mypy_extensions', '1.0.0', {
        'checksums': ['75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782'],
    }),
    ('pytest-cov', '5.0.0', {
        'checksums': ['5837b58e9f6ebd335b0f8060eecce69b662415b16dc503883a02f45dfeb14857'],
    }),
    ('bandit', '1.7.9', {
        'checksums': ['7c395a436743018f7be0a4cbb0a4ea9b902b6d87264ddecf8cfdc73b4f78ff61'],
    }),
    ('black', '24.4.2', {
        'checksums': ['c872b53057f000085da66a19c55d68f6f8ddcac2642392ad3a355878406fbd4d'],
    }),
    ('black-nb', '0.7', {
        'checksums': ['8742a4f7c728302c91954325168d779f9444f8e3c31b19598ee8e98fc4bf4782'],
    }),
    ('darglint', '1.8.1', {
        'checksums': ['080d5106df149b199822e7ee7deb9c012b49891538f14a11be681044f0bb20da'],
    }),
    ('doc8', '1.1.1', {
        'checksums': ['d97a93e8f5a2efc4713a0804657dedad83745cca4cd1d88de9186f77f9776004'],
    }),
    ('flake8', '7.0.0', {
        'checksums': ['33f96621059e65eec474169085dc92bf26e7b2d47366b70be2f67ab80dc25132'],
    }),
    ('isort', '5.13.2', {
        'checksums': ['48fdfcb9face5d58a4f6dde2e72a1fb8dcaf8ab26f95ab49fab84c2ddefb0109'],
    }),
    ('pytest-benchmark', '4.0.0', {
        'checksums': ['fb0785b83efe599a6a956361c0691ae1dbb5318018561af10f3e915caa0048d1'],
    }),
    ('pytest-xprocess', '1.0.2', {
        'modulename': 'xprocess',
        'checksums': ['15e270637586eabc56755ee5fcc81c48bdb46ba7ef7c0d5b1b64302d080cc60f'],
    }),
    ('pre_commit', '3.7.1', {
        'checksums': ['8ca3ad567bc78a4972a3f1a477e94a79d4597e8140a6e0b651c5e33899c3654a'],
    }),
    ('typing_extensions', '4.9.0', {
        'checksums': ['23478f88c37f27d76ac8aee6c905017a143b0b1b886c3c9f66bc2fd94f9f5783'],
    }),
    ('fflows', '0.0.3', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['18de7a7b98e3708ff2d5ae9f10fad625740230c4de6447906b7ca477667b78fb'],
    }),
    ('geomloss', '0.2.6', {
        'checksums': ['491c47085c5001b2cb6128ea541fd2d0a8808ae50e88a0798c7853c9d995faeb'],
    }),
    ('nflows', '0.14', {
        'checksums': ['6299844a62f9999fcdf2d95cb2d01c091a50136bd17826e303aba646b2d11b55'],
    }),
    ('opt_einsum', '3.3.0', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['2455e59e3947d3c275477df7f5205b30635e266fe6dc300e3d9f9646bfcea147'],
    }),
    ('opacus', '1.4.1', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['8c46aff596bbbc6025ce9d169b49d5b3112cb958e3d74f8b77274134e7590890'],
    }),
    ('pgmpy', '0.1.25', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['7c4fb15e4c0fd0310160a6a77297d6db382bd18f6ff35fcd0458c3cbd42caf78'],
    }),
    ('feather-format', '0.4.1', {
        'modulename': 'feather',
        'checksums': ['45f67e3745d394d4f160ca6d636bbfd4f8b68d01199dc1649b6e487d3e878903'],
    }),
    ('inflate64', '1.0.0', {
        'checksums': ['3278827b803cf006a1df251f3e13374c7d26db779e5a33329cc11789b804bc2d'],
    }),
    ('multivolumefile', '0.2.3', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['237f4353b60af1703087cf7725755a1f6fcaeeea48421e1896940cd1c920d678'],
    }),
    ('pybcj', '1.0.2', {
        'modulename': 'bcj',
        'checksums': ['c7f5bef7f47723c53420e377bc64d2553843bee8bcac5f0ad076ab1524780018'],
    }),
    ('pycryptodomex', '3.20.0', {
        'modulename': 'Crypto',
        'checksums': ['7a710b79baddd65b806402e14766c721aee8fb83381769c27920f26476276c1e'],
    }),
    ('pyppmd', '1.0.0', {
        'checksums': ['075c9bd297e3b0a87dd7aeabca7fee668218acbe69ecc1c6511064558de8840f'],
    }),
    ('pyzstd', '0.16.0', {
        'checksums': ['fd43a0ae38ae15223fb1057729001829c3336e90f4acf04cf12ebdec33346658'],
    }),
    ('texttable', '1.7.0', {
        'checksums': ['2d2068fb55115807d3ac77a4ca68fa48803e84ebb0ee2340f858107a36522638'],
    }),
    ('py7zr', '0.20.6', {
        'checksums': ['d036dee11fce69ad8d4fa86025ccfc4a3511ec27ee1c6b5bd8d6759313dbd077'],
    }),
    ('torchtuples', '0.2.2', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['186625230a149cc09f64116d51b203ffefe78160f5a0445adad195893663f55b'],
    }),
    ('pycox', '0.2.3', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['9ea3c64a4a650ccf6c96cf512712de330f2d75de32122d86995c7cd37ff105d1'],
    }),
    ('keopscore', '2.2.3', {
        'checksums': ['64d5dad1e8c806d7070cdc60e48fd5bbf006f2bf1afd39ad3fa5e9fb213517d2'],
    }),
    ('pykeops', '2.2.3', {
        'checksums': ['2e2cba1de5e05c35559957a14f41cb5165dc667cc51b3b2118d7e0027eb435a1'],
    }),
    ('pyts', '0.13.0', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['b49608267b686ea693dba31316ef2b22ad73ea29b27144696c347809ecd5ad62'],
    }),
    ('tsai', '0.3.9', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['0e6460e9ff075176c8af25ef90444ef2e287bc5fe5510e2a0f427e4d0b37ebc0'],
    }),
    ('accelerate', '0.32.1', {
        'checksums': ['3999acff0237cd0d4f9fd98b42d5a3163544777b53fc4f1eec886b77e992d177'],
    }),
    ('be_great', '0.0.7', {
        'source_tmpl': '%(name)s-%(version)s-py3-none-any.whl',
        'checksums': ['824f10482581f5211d3a435d8b14adcc6c21b38d952f00b6a792fc7c089788b1'],
    }),
    ('xgbse', '0.2.3', {
        'preinstallopts': "sed -i  -e '45,49d' -e 's/pandas>=1.0.\*/pandas>=1.0.0/' setup.py && ",
        'source_urls': ['https://github.com/loft-br/xgboost-survival-embeddings/archive/'],
        'sources': ['v%(version)s.tar.gz'],
        'checksums': ['9e6b71539b2b533c00eddfe7681cdd541f393d9573594eca358d263b141c127d'],
    }),
    ('arfpy', '0.1.1', {
        'checksums': ['88170d5e72638b0dbfec28cfbdfee02e97bd6a06d5a636e960acd5d90d480707'],
    }),
    (name, version, {
        'preinstallopts': "sed -i -e 's/pandas>=1.4,<2/pandas>=1.4/' -e 's/torch>=1.10.0,<2.0/torch>=1.10.0/' -e 's/numpy>=1.20, <1.24/numpy>=1.20/' -e 's/pydantic<2.0/pydantic/' -e 's/xgboost<2.0.0/xgboost/' -e 's/lifelines>=0.27,!= 0.27.5, <0.27.8/lifelines>=0.27,!= 0.27.5/' %(builddir)s/%(name)s/%(name)s-%(version)s/setup.cfg && ",
        'source_urls': ['https://github.com/vanderschaarlab/synthcity/archive/'],
        'sources': ['v%(version)s.tar.gz'],
        'checksums': ['122a8546cad35e3ac5c74cf81281252dec4dd3c7b1d7afe0f45ef785f89cc682'],
    }),
]
# 'runtest': 'export PYTHONPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages:$PYTHONPATH && pytest -vvvs -m "not slow" --durations=50',
sanity_check_commands = [
    'pytest -vvvs -m "not slow" --durations=50',
    "python -c 'from synthcity.plugins import Plugins'",
    "python -c 'from decaf import DECAF, DataModule'"
]

moduleclass = 'lib'

# ERROR5:
    # from pytest:
    # twisted 24.3.0 requires automat, ok
    # twisted 24.3.0 requires constantly, ok
    # twisted 24.3.0 requires hyperlink, ok
    # twisted 24.3.0 requires zope-interface, ok
    # No module named 'incremental' ok
    # ModuleNotFoundError: No module named 'twisted' ok
    # ModuleNotFoundError: No module named 'fixtures' ok
    # ModuleNotFoundError: No module named 'hypothesis' OK
    # ModuleNotFoundError: No module named 'testscenarios' ok
    # ModuleNotFoundError: No module named 'testtools' ok
    # ModuleNotFoundError: No module named 'evaluate' ok
# ERROR4:
    # maybe to postinstallopts?
    # ??? add "export PYTHONPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages:$PYTHONPATH &&" before pytest?
        # -> NO there is no synthcity in site-packages yet
    # ??? -> add pytest cmd to sanity check cmds
    # = 2024-07-16 15:03:20,115 build_log.py:171 ERROR EasyBuild crashed with an error (at easybuild/easybuild-framework/easybuild/base/exceptions.py:126 in __init__): cmd "  pytest -vvvs -m "n slow" --durations=50 " exited with exit code 4 and output:
    # ImportError while loading conftest '/tmp/vsc47063/easybuild/build/synthcity/0.2.10/foss-2023a/synthcity/synthcity-0.2.10/tests/conftest.py'.
    # tests/conftest.py:10: in <module>
    #     from synthcity.utils.reproducibility import clear_cache, enable_reproducible_results
    # E   ModuleNotFoundError: No module named 'synthcity'
# ERROR3: OK
    # -> add coverage to deps
    # -> put runtest to exts - synthcity ext, not as runtest = ...
    # tests/test_pytest_cov.py:12: in <module>
    #     import coverage
    # E   ModuleNotFoundError: No module named 'coverage'
# ERROR2: OK
    # -> fix pandas version in setup.py by local_xgbse_preinstallopts
    # == 2024-07-15 14:17:49,585 build_log.py:171 ERROR EasyBuild crashed with an error (at easybuild/easybuild-framework/easybuild/base/exceptions.py:126 in __init__): cmd "sed -i '45,49d' setup.py &&  /apps/gent/RHEL8/zen2-ib/software/Python/3.11.3-GCCcore-12.3.0/bin/python -m pip install --prefix=/scratch/gent/vo/001/gvo00117/easybuild/RHEL8/zen2-ib/software/synthcity/0.2.10-foss-2023a  --no-deps  --ignore-installed  --no-index  --no-build-isolation  ." exited with exit code 1 and output:
    # Processing /tmp/vsc47063/easybuild/build/synthcity/0.2.10/foss-2023a/xgbse/xgboost-survival-embeddings-0.2.3
    #   Preparing metadata (setup.py): started
    #   Preparing metadata (setup.py): finished with status 'error'
    #   error: subprocess-exited-with-error
    
    #    python setup.py egg_info did not run successfully.
    #    exit code: 1
    #   > [3 lines of output]
    #       error in xgbse setup command: 'install_requires' must be a string or list of strings containing valid project/version requirement specifiers; Expected end or semicolon (after version specifier)
    #           pandas>=1.0.*
    #                 ~~~~~^
    #       [end of output]
    
    #   note: This error originates from a subprocess, and is likely not a problem with pip.
    # error: metadata-generation-failed

    #  Encountered error while generating package metadata.
    # > See above for output.

    # note: This is an issue with the package mentioned above, not pip.
    # hint: See above for details.
# ERROR1: OK
    # -> add xgbse_preinstallopts to delete wrong part from setup.py
    # -> seems like a problem with pip and setuptools version: https://stackoverflow.com/questions/77124879/pip-extras-require-must-be-a-dictionary-whose-values-are-strings-or-lists-of
    # == 2024-07-15 13:57:09,544 build_log.py:171 ERROR EasyBuild crashed with an error (at easybuild/easybuild-framework/easybuild/base/exceptions.py:126 in __init__): cmd " /apps/gent/RHEL8/zen2-ib/software/Python/3.11.3-GCCcore-12.3.0/bin/python -m pip install --prefix=/scratch/gent/vo/001/gvo00117/easybuild/RHEL8/zen2-ib/software/synthcity/0.2.10-foss-2023a  --no-deps  --ignore-installed  --no-index  --no-build-isolation  ." exited with exit code 1 and output:
    # Processing /tmp/vsc47063/easybuild/build/synthcity/0.2.10/foss-2023a/xgbse/xgboost-survival-embeddings-0.2.3
    #   Preparing metadata (setup.py): started
    #   Preparing metadata (setup.py): finished with status 'error'
    #   error: subprocess-exited-with-error
    
    #    python setup.py egg_info did not run successfully.
    #    exit code: 1
    #   > [1 lines of output]
    #       error in xgbse setup command: 'extras_require' must be a dictionary whose values are strings or lists of strings containing valid project/version requirement specifiers.
    #       [end of output]
    
    #   note: This error originates from a subprocess, and is likely not a problem with pip.
    # error: metadata-generation-failed

    #  Encountered error while generating package metadata.
    # > See above for output.

    # note: This is an issue with the package mentioned above, not pip.
    # hint: See above for details.
